int searcher(vector<int>& nums){
        int n = nums.size();
        int a = 0;
        int temp = INT_MAX;
        for(int i = n-1; i >=0 ; i--){
            if(nums[i] <= temp){a = i;temp = nums[i];}
            else if(nums[i] > temp){break;}
        }
        return a;
    }
    bool search(vector<int>& nums, int target) {
        int ind = searcher(nums);
        int n = nums.size();
        if(n == 1)return target == nums[0];

        if(target == nums[0] || target == nums[n-1]){
            return true;
        }
        int l = 0, r = n-1;
        while(l <= r){
            int mid = (l+r)/2;
            if(nums[mid] == target || nums[l] == target || nums[r] == target)return true;
            if((nums[l] == nums[mid]) && (nums[r] == nums[mid])){l++;r--;}
            else if(nums[l] <= nums[mid]){
                if(nums[l] <= target && nums[mid] > target)r = mid-1;
                else l = mid+1;
            }
            else{
                if(nums[mid] < target && nums[r] >= target) l = mid+1;
                else r = mid-1;
            }

        }
        return false;
    }
