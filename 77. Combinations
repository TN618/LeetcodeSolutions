void gen(int n, int k, vector<vector<int> >& ans, vector<int> temp, int ind){
        if(temp.size() == k){ans.push_back(temp); return;}
        for(int i = ind; i <= n; i++){
            temp.push_back(i);
            
            gen(n,k,ans,temp,i+1);
            
            temp.pop_back();
        }
    }
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int> > ans;
        vector<int> temp;
        if(k == n){
            for(int i =1; i <= n; i++){
                temp.push_back(i);
            }
            ans.push_back(temp);
            return ans;
        }
        gen(n,k,ans,temp,1);
        return ans;
    }
    /*
    smort soln ->
    vector<vector<int>> combine(int n, int k) {
		vector<vector<int>> ans;
		int i = 0;
		vector<int> p(k, 0);
		while (i >= 0) {
			p[i]++;
			if (p[i] > n) --i;
			else if (i == k - 1) ans.push_back(p);
			else {
			    ++i;
			    p[i] = p[i - 1];
			}
		}
		return ans;
	}
    */
